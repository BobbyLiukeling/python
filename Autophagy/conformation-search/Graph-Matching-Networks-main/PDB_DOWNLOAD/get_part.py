# -*- coding: utf-8 -*-
# @Time : 2022/1/23 0023 22:58
# @Author : Bobby_Liukeling
# @File : get_part.py

from Bio.PDB.PDBParser import PDBParser
import pdb,copy,os,warnings

warnings.filterwarnings("ignore")


def get_resname(string): #传入一行数据
    temp = string.strip().split(' ')
    while '' in temp:
        temp.remove('')
    res_name = temp[1]
    if len(res_name) > 1:
        pass
    else:
        res_name = temp[2]
    return res_name


def get_resnames(pdb_file):
    key = "HETNAM"
    f = open(pdb_file, "r+")
    res_names = []
    guard = 0
    for line in f:
        if line.startswith(key):
            while key in line:
                res_names.append(get_resname(line))
                line = next(f)
            guard = 1
        if guard == 1:
            break
    return set(res_names).difference(del_resname)  #返回残基名字列表,只要那些可能存在的
    # return set(res_names)  #返回残基名字列表,只要那些可能存在的



def get_resPDBfile(positions,pdb_filename,resname):
    head = """MODEL        1
COMPND    4XEY_1N1_B_601 
AUTHOR    GENERATED BY OPEN BABEL 3.1.0"""
    with open(pdb_filename,"w") as f:
        f.write(head+'\n')
        count = 1  #原子序号
        for i in positions:
            # pdb.set_trace()
            coord = str(i.coord[0]) + ' '+str(i.coord[1]) + ' ' +str(i.coord[2])
            # string = 'HETATM    {}  {}   {}     1     {}  1.00  0.00           {}\n'.format(count,i.element,resname,coord,i.element)
            # string = 'HETATM {}  {}   {}   C 101  {}   {}  {}     1.00 0.00           {}\n'.format(count,i.element,resname,str(i.coord[0]),str(i.coord[1]),str(i.coord[2]),i.element)
            # string = 'HETATM 2039  N   PTR C 101      41.838   6.994  23.774  1.00 28.73           N'
            string = 'HETATM    {}  {}   {}     1     {}  1.00  0.00           {}\n'.format(count,i.element,resname,coord,i.element)
            f.write(string)
            count = count+1
        f.write("end")
        f.close()



pwd = os.path.dirname(os.path.realpath(__file__)) #当前文件夹下
pdb_All = pwd+"\\temp"
# pdb_All = pwd+"\\PDB_File"
files = os.listdir(pdb_All) #得到文件夹下的所有文件名称
os.chdir(pdb_All)  # 跳转到当前文件夹下
# pdb_file = "6GGC.pdb"
del_resname = ["ZN","EDO","GOL","MG","ACE","GLZ","CA","EOH","GLC","AU","CL","NI","CA"]
parser = PDBParser()
count = 0
print("*****************start*******************")
# file = "6njs.pdb"
for file in files: #遍历文件夹
    try:
        structure = parser.get_structure("6GGC", file)
    except:
        pdb.set_trace()
    residues = structure.get_residues()
    residues_list = []
    resnames = get_resnames(
        file
    )
    if len(resnames) == 0: #没有配体
        continue
    length = 0
    positions = []
    resname = ''
    for residue in residues:
        if residue.resname in resnames:
            if length<len(residue.child_list): #原子数最多的那个残基
                length = len(residue.child_list)
                positions = copy.deepcopy(residue.child_list)
                resname = residue.resname

    pdb_filename = pwd+"\\res_PDB_file\\"+file.split('.')[0] +"_"+ resname+".pdb"
    get_resPDBfile(positions,pdb_filename,resname)

    if count%50 == 0:
        print("the count is : ",count)
    count = count+1

